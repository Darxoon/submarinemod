#import ConveyorBelt.mpat

#new:Function $Function_IsPartnerBow {
    0:  LAB       V1, 8010EBB3
    8:  LI        V0, 9
    C:  BNEL      V1, V0, .o1C
   10:  SW        R0, 84 (A0)
   14:  LI        V0, 1
   18:  SW        V0, 84 (A0)
       .o1C
   1C:  JR        RA
   20:  LI        V0, 2
}

@ $Header {
	[MainScript] $Script_Main
	[Background] 00000000
	[EntryList] $EntryList
	[EntryCount] 2
	[MapTattle] 002F0018
}

@ $Script_Main {
	Set  *GB_WorldLocation  .Location:GoombaRoad
	Call SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call SetCamEnabled      ( .Cam:Default .True
	Call SetCamLeadPlayer   ( .Cam:Default .False )
	Exec $Script_MakeEntities
	Exec $Script_SetupMusic
	Exec $Script_SetupTexturePan
	Exec $Script_EnterMap
	
	Exec $Script_MakeCustomEntities
    Exec $Script_SetupConveyors
    Exec $Script_UpdateSwitches
	Exec $Script_SetupBowPlatforms
	
	Bind $Script_OnPlatformFloor .Trigger:FloorTouch ~Collider:PlatformFloor 00000001 00000000
	Bind $Script_OnHallwayFloor .Trigger:FloorTouch ~Collider:HallwayFloor 00000001 00000000
	Bind $Script_SaveRedSwitchState .Trigger:FloorTouch ~Collider:LowerFloorStart 00000001 00000000
	Bind $Script_SaveRedSwitchState .Trigger:FloorTouch ~Collider:UpperFloor 00000001 00000000
	
	If *MF_caf_04_GratingDestroyed == .True
		Call ModifyColliderFlags ( 0` ~Collider:RedSwitch_wall 00018000 )
		Call SetGroupEnabled ( ~Model:RedSwitch_grating .False )
	EndIf
	
	% this is awful
	If *MF_BlueSwitchHit == .False
		Exec $Script_SetupRedPlatforms
	EndIf
	If *MF_RedSwitchHit == .False
		Exec $Script_SetupBluePlatforms
	EndIf
	Return
	End
}

#new:Script $Script_MakeCustomEntities {
	Call MakeEntity    ( .Entity:YellowBlock ~Vec4d:Block2 .Item:Mushroom 80000000 )
	Call AssignBlockFlag   ( *MF_caf_04_Block2Opened )
	Call UseDynamicShadow ( .True )
    
	Call MakeEntity    ( .Entity:BlueSwitch ~Vec4d:RedSwitch 80000000 )
	Call AssignScript    ( $Script_EVT_RedSwitch )
	
	If *MF_caf_04_Crate0Destroyed == .False
		Call  MakeEntity    ( .Entity:WoodenCrate ~Vec4d:Box5 FFFFFFFF 80000000 )
		Call  AssignScript    ( $Script_EVT_Box5 )
	Else
		Call ModifyColliderFlags ( 0` ~Collider:Box5_wall 00018000 )
	EndIf
	
	If *MF_caf_04_Crate1Destroyed == .False
		Call  MakeEntity    ( .Entity:WoodenCrate ~Vec4d:Box6 FFFFFFFF 80000000 )
		Call  AssignScript    ( $Script_EVT_Box6 )
	Else
		Call ModifyColliderFlags ( 0` ~Collider:Box6_wall 00018000 )
	EndIf
	Return
	End
}

#new:Script $Script_MakeGiantChest {
	If *MapFlag[3] == .True
		Return
	EndIf
	Set *MapFlag[3] .True
	
	Call  MakeEntity    ( .Entity:GiantChest ~Vec4d:BigChest .Item:SpinJump 80000000 )
	Call  AssignFlag    ( *MF_caf_04_GiantChest )
	Exec  $Script_MonitorGiantChest_BigChest
	Return
	End
}

#new:Script $Script_EVT_Box5 {
	Set *MF_caf_04_Crate0Destroyed .True
	Call ModifyColliderFlags ( 0` ~Collider:Box5_wall 00018000 )
	Return
	End
}

#new:Script $Script_EVT_Box6 {
	Set *MF_caf_04_Crate1Destroyed .True
	Call ModifyColliderFlags ( 0` ~Collider:Box6_wall 00018000 )
	Return
	End
}

@ $Script_Callback_Entrance0 {
	If *MB_Story < .ModProgress:MetBow
		Call DisablePlayerInput ( .True )
		Call DisablePartnerAI ( 00000000 )
		Exec $Script_MeetBow
	EndIf
	Return
	End
}

#new:Script $Script_MeetBow {
	% Make Bow invisible
	Call  802CFD30  ( .Npc:Partner 00000007 0` 00000000 00000000 00000000 )
	
	Wait 5`
	Call SetNpcPos ( .Npc:Partner ~Vec3D:Bow_Start )
	Call NpcFacePlayer ( .Npc:Partner 00000000 )
	
	Wait 20`
	
	Call InterpPlayerYaw ( 80 0` )
	
	Wait 40`
	Call InterpPlayerYaw ( F0 0` )
	Wait 40`
	
	Call SetNpcAnimation ( .Npc:Partner 00050008 )
	
	Thread
		Call  GetNpcPos     ( .Npc:Partner *VarA *VarB *VarC )
		Set   *VarB  30`
		Call  SetNpcPos     ( .Npc:Partner *VarA *VarB *VarC )
		Call  SetNpcScale   ( .Npc:Partner *Fixed[3.0] *Fixed[3.0] *Fixed[3.0] )
		SetF  *Var0  *Fixed[0.0]
		Loop  00000014
			AddF  *Var0  *Fixed[12.0]
			Call  802CFD30  ( .Npc:Partner 00000007 *Var0 00000000 00000000 00000000 )
			Wait  1`
		EndLoop
	EndThread
	Call  PlaySoundAtNpc    ( .Npc:Partner 00000291 00000000 )
	ExecWait  $Script_SpookPlayer
	
	Call MakeLerp ( 300` 100` 30` .Easing:CosInOut )
	Loop
        Call UpdateLerp ()
		DivF *Var0 100`
		Call  SetNpcScale   ( .Npc:Partner *Var0 *Var0 *Var0 )
		
        Wait 1`
        If *Var1 == 00000000
            BreakLoop
        EndIf
	EndLoop
	
	Call SetNpcAnimation ( .Npc:Partner 00050001 )
	Call NpcFlyTo ( .Npc:Partner ~Vec3D:Bow_MoveTo 40` 0` .Easing:CosInOut )
	
	Call ResetCam ( .Cam:Default *Fixed[5.0] )
	
	Call SpeakToPlayer ( .Npc:Partner 00050004 00050001 00000000 002F000F )
	
	Set *MB_Story .ModProgress:MetBow
	Call EnablePartnerAI ()
	Call DisablePlayerInput ( .False )
	Return
	End
}

#new:Script $Script_SpookPlayer
{
	ChildThread
		Call  GetPlayerPos      ( *VarA *VarB *VarC )
		Call  UseSettingsFrom   ( .Cam:Default *VarA *VarB *VarC )
		Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
		Loop
			Call  SetCamDistance    ( .Cam:Default  400` )
			Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
			Wait  1`
			Call  SetCamDistance    ( .Cam:Default  450` )
			Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
			Wait  1`
		EndLoop
	EndChildThread
	Call  SetPlayerAnimation    ( 0001002B )
	Wait  30`
	Call  SetPlayerAnimation    ( 00010002 )
	Return
	End
}

@ $Script_ExitE {
	If *MB_Story <= .ModProgress:MetBow
		If *MF_caf_04_GiantChest == .False
			Call DisablePlayerInput ( .True )
			Call SpeakToPlayer ( .Npc:Partner 00050004 00050001 00000000 002F0010 )
			Call DisablePlayerInput ( .False )
			Return
		EndIf
		If *MF_caf_04_DoorUnlocked == .False
			Call DisablePlayerInput ( .True )
			Call SpeakToPlayer ( .Npc:Partner 00050004 00050001 00000000 002F0011 )
			Call DisablePlayerInput ( .False )
			Return
		EndIf
	EndIf
	
	SetGroup 0000001B
	Call  DisablePlayerInput ( .True )
	Call  UseDoorSounds ( .DoorSounds:Metal )
	Set   *Var[0]  ~Entry:Entry0
	Set   *Var[1]  ~Collider:door_e
	Set   *Var[2]  ~Model:door3
	Set   *Var[3]  .DoorSwing:In
	Exec  ExitSingleDoor
	Wait  17`
	Call  GotoMap   ( "caf_05" ~Entry:caf_05:entry_s )
	Wait  100`
	Return
	End
}

#new:Script $Script_SaveRedSwitchState {
	Set *MapFlag[4] *MF_RedSwitchHit
	Return
	End
}

% Spring

#new:Script $Script_OnPlatformFloor {
	Set *MapFlag[2] .True
	Return
	End
}

#new:Script $Script_OnHallwayFloor {
	Set *MapFlag[2] .False
	Return
	End
}

@ $Script_ScriptedSpring_Spring {
	Call  DisablePlayerInput    ( .True )
	Call  DisablePlayerPhysics  ( .True )
	Call  SetPlayerActionState  ( .ActionState:Launch )
	Wait  1`
	Exec  $Script_ScriptedSpring_FollowCam *Var[A]
	Call  SetPlayerJumpscale    ( *Fixed[0.7] )
	
	If *MapFlag[2] == .True
		Call PlayerJump ( ~Vec3d:LowerSpringDestination 20` )
	Else
		Call PlayerJump ( ~Vec3d:SpringDestination 30` )
	EndIf
	
	Kill  *Var[A]
	Call  SetPlayerActionState  ( .ActionState:Idle )
	Call  DisablePlayerPhysics  ( .False )
	Call  DisablePlayerInput    ( .False )
	Return
	End
}

% Conveyors, Switches & Platforms

#new:Data $Data_ConveyorColliders {
	~Collider:ConveyorLeft
    ~Collider:ConveyorRight
    ~Collider:ConveyorDown
    ~Collider:ConveyorUp
}

#new:Data $Data_ConveyorPushVels {
	C079999A 00000000
	4079999A 00000000
	00000000 4079999A
	00000000 C079999A
}

#new:Script $Script_SetupConveyors {
    Loop
        Call $Function_AddConveyorPush (  )
        Wait 1`
    EndLoop
    Return
    End
}

#new:Script $Script_UpdateSwitches {
	If *MF_BlueSwitchHit == .True
		Call SetGroupEnabled ( ~Model:Platform1_activated .False )
		Call SetGroupEnabled ( ~Model:Platform1_deactivated .True )
		
		Call SetGroupEnabled ( ~Model:ConveyorsUpper .True )
		Call SetGroupEnabled ( ~Model:ConveyorsUpperReversed .False )
	Else
		Call SetGroupEnabled ( ~Model:Platform1_activated .True )
		Call SetGroupEnabled ( ~Model:Platform1_deactivated .False )
		
		Call SetGroupEnabled ( ~Model:ConveyorsUpper .False )
		Call SetGroupEnabled ( ~Model:ConveyorsUpperReversed .True )
	EndIf
	
	If *MF_RedSwitchHit == .True
		Call SetGroupEnabled ( ~Model:Platform3_activated .False )
		Call SetGroupEnabled ( ~Model:Platform3_deactivated .True )
		Call ModifyColliderFlags ( 0` ~Collider:Platform3 00018000 )
		
		Call SetGroupEnabled ( ~Model:ConveyorsLower .True )
		Call SetGroupEnabled ( ~Model:ConveyorsLowerReversed .False )
	Else
		Call SetGroupEnabled ( ~Model:Platform3_activated .True )
		Call SetGroupEnabled ( ~Model:Platform3_deactivated .False )
		
		Call SetGroupEnabled ( ~Model:ConveyorsLower .False )
		Call SetGroupEnabled ( ~Model:ConveyorsLowerReversed .True )
		
		Call $Function_IsPartnerBow (  )
		If *Var0 == .False
			Call ModifyColliderFlags ( 1` ~Collider:Platform3 00018000 )
		EndIf
	EndIf
	Return
	End
}

#new:Script $Script_SetupBowPlatforms {
	Loop
		Call $Function_IsPartnerBow (  )
		
		If *Var0 == .True
			Wait 4`
			Call ModifyColliderFlags ( 0` ~Collider:Platform1 00018000 )
			Call ModifyColliderFlags ( 0` ~Collider:Platform2 00018000 )
			Call ModifyColliderFlags ( 0` ~Collider:Platform3 00018000 )
			Wait 10`
		Else
			If *MF_BlueSwitchHit == .False
				Call ModifyColliderFlags ( 1` ~Collider:Platform1 00018000 )
				Call ModifyColliderFlags ( 1` ~Collider:Platform2 00018000 )
			EndIf
			If *MF_RedSwitchHit == .False
				Call ModifyColliderFlags ( 1` ~Collider:Platform3 00018000 )
			EndIf
		EndIf
		
		Call GetPlayerPos ( *Var0 *Var1 *Var2 )
		
		If *Var2 >= 260`
			Call SetGroupEnabled ( ~Model:FrontWall .True )
			Call SetGroupEnabled ( ~Model:GratingLower .True )
			
			UseArray $Data_ConveyorColliders
			Set *Array[0] ~Collider:ConveyorLeft2
			Set *Array[1] ~Collider:ConveyorRight2
			Set *Array[2] ~Collider:ConveyorDown2
			Set *Array[3] ~Collider:ConveyorUp2
			
			UseArray $Data_ConveyorPushVels
			If *MF_RedSwitchHit == .True
				Set *Array[0] C079999A
				Set *Array[2] 4079999A
			Else
				Set *Array[0] 4079999A
				Set *Array[2] C079999A
			EndIf
			
			If *MapFlag[3] == .False
				Exec $Script_MakeGiantChest
			EndIf
		Else
			If *Var0 < -440`
				Call SetGroupEnabled ( ~Model:FrontWall .True )
				Call SetGroupEnabled ( ~Model:GratingLower .True )
			Else
				Call SetGroupEnabled ( ~Model:FrontWall .False )
				Call SetGroupEnabled ( ~Model:GratingLower .False )
				
				UseArray $Data_ConveyorColliders
				Set *Array[0] ~Collider:ConveyorLeft
				Set *Array[1] ~Collider:ConveyorRight
				
				UseArray $Data_ConveyorPushVels
				If *MF_BlueSwitchHit == .True
					Set *Array[0] C079999A
					Set *Array[2] 4079999A
				Else
					Set *Array[0] 4079999A
					Set *Array[2] C079999A
				EndIf
			EndIf
		EndIf
		
		If *Var2 > 220`
			Call SetGroupEnabled ( ~Model:GratingLowerLeftmost .True )
		Else
			Call SetGroupEnabled ( ~Model:GratingLowerLeftmost .False )
		EndIf
		
		% Hack because the lower conveyor puzzle breaks the Kooper moving platform
		% puzzle and I don't have the time to fix it properly
		If *Var0 > 50`
			If *Var2 > 100`
				If *Var2 < 300`
					Set *MF_RedSwitchHit *MapFlag[4]
					Exec $Script_UpdateSwitches
				EndIf
			EndIf
		EndIf
		
		Wait 1`
	EndLoop
	
	Return
	End
}

#new:Script $Script_SetupRedPlatforms {
	If *MapFlag[0] == .True
		Return
	EndIf
	Set *MapFlag[0] .True
	
	Set *Var2 0`
	Set *Var3 84`
    Set *Var4 1`
	Set *Var5 ~Collider:unreachable
	Set *Var6 80`
	Set *Var7 60`
	Set *Var8 ~Model:Platform1_floor
	Set *Var9 ~Model:Platform1
	Set *VarA ~Collider:Platform1
    Exec $Script_MovePlatform
	Return
	End
}

#new:Script $Script_SetupBluePlatforms {
	If *MapFlag[1] == .True
		Return
	EndIf
	Set *MapFlag[1] .True
	
	Wait 90`
	
	Set *Var2 0`
	Set *Var3 60`
    Set *Var4 1`
	Set *Var5 ~Collider:unreachable
	Set *Var6 80`
	Set *Var7 100`
	Set *Var8 ~Model:Platform3_floor
	Set *Var9 ~Model:Platform3
	Set *VarA ~Collider:Platform3
    Exec $Script_MovePlatform
	Return
	End
}

% actually the blue switch, I can't be bothered to rename them in code
#new:Script $Script_EVT_RedSwitch {
	If *MF_BlueSwitchHit == .True
		Set *MF_BlueSwitchHit .False
		Exec $Script_SetupRedPlatforms
	Else
		Set *MF_BlueSwitchHit .True
	EndIf
	
	Call ModifyColliderFlags ( 0` ~Collider:RedSwitch_wall 00018000 )
	Call SetGroupEnabled ( ~Model:RedSwitch_grating .False )
	Set *MF_caf_04_GratingDestroyed .True
	
	Exec $Script_UpdateSwitches
	Return
	End
}

% actually the red switch
@ $Script_EVT_BlueSwitch {
	If *MF_RedSwitchHit == .True
		Set *MF_RedSwitchHit .False
		Exec $Script_SetupBluePlatforms
	Else
		Set *MF_RedSwitchHit .True
	EndIf
	
	Exec $Script_UpdateSwitches
	Return
	End
}

@ $Script_EVT_BlueSwitch2 {
	If *MF_RedSwitchHit == .True
		Set *MF_RedSwitchHit .False
	Else
		Set *MF_RedSwitchHit .True
	EndIf
	
	Exec $Script_UpdateSwitches
	Return
	End
}

% Super Boots Chest

#new:String $String_OpenGiantChest_BigChest {
	[Style Narrate]
	You got the Super Boots![BR]
	[Pause 5]The attack power of[BR]
	Mario's Jump increases![BR]
	[Wait][Next]
	And now you can do the[BR]
	Spin Jump by pressing [A][BR]
	again while in the air![Wait][End]
}

#new:Function $Function_GiveSuperBoots {
    LIO t0, 8010F290
    ORI t1, r0, 1 % hex for 1
    SB t1, 0000 (t0) % set Boots
    JR RA
    ORI v0, r0, 2
}

#new:Script $Script_MonitorGiantChest_BigChest {
	If  *MF_caf_04_GiantChest  ==  .False
		Loop
			If  *MF_caf_04_GiantChest  ==  .True
				BreakLoop
			EndIf
			Wait  1`
		EndLoop
		Wait  60`
		% note: ShowMessageAtScreenPos overwrites Var[0], this is a bug in vanilla
		Set   *Var[4] *Var[0]
		Exec  $Script_GiantChest_Music
		Call  ShowMessageAtScreenPos    ( $String_OpenGiantChest_BigChest 000000A0 00000028 )
		Call  $Function_GiantChest_Support ( )
		
		% add your extra code here
		Call $Function_GiveSuperBoots (  )
	EndIf
	Return
	End
}

#new:Script $Script_GiantChest_Music
{
	Call  802D5FF8  ( 00000042 00000001 )
	Wait  130`
	Call  802D5FD8 ( )
	Return
	End
}

#new:Function $Function_GiantChest_Support
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_entity_by_index
	LW        A0, 94 (A0) % 84 in vanilla
	LW        A0, 40 (V0)
	ADDIU     V1, R0, 1
	SB        V1, 30 (A0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}
